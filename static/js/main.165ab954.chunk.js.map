{"version":3,"sources":["App.js","index.js","logo.svg"],"names":["App","useState","oldExpression","setOldExpression","expression","setExpression","prev","setPrev","numberics","Set","operators","brackets","buttons","evalateExpression","evaluatedValue","eval","String","putNumerics","value","putOperators","length","slice","putBack","putBrackets","onKeyUpHandler","event","key","has","className","tabIndex","onKeyUp","style","background","width","borderRadius","display","flexDirection","justifyContent","alignItems","padding","margin","overflow","flexWrap","map","buttonValue","idx","onClick","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"g3BAIA,SAASA,MACP,cAAwCC,oDAAS,IAAjD,qKAAKC,cAAL,cAAoBC,iBAApB,cACA,WAAkCF,oDAAS,KAA3C,sKAAKG,WAAL,cAAiBC,cAAjB,cACA,WAAsBJ,oDAAS,IAA/B,sKAAKK,KAAL,cAAWC,QAAX,cAEIC,UAAY,IAAIC,IAAI,eACpBC,UAAY,IAAID,IAAI,SACpBE,SAAW,IAAIF,IAAI,MAEnBG,QAAU,CAAC,IAAK,IAAK,IAAK,KAAM,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,KAE3GC,kBAAoB,SAApBA,oBACF,GAAY,MAARP,KAAc,CAChB,IAAIQ,eAAiBC,KAAKX,YAC1BD,iBAAiBC,WAAa,OAC9BC,cAAcW,OAAOF,iBACrBP,QAAQ,SAIRU,YAAc,SAACC,GACL,OAARZ,MACFH,iBAAiB,SAAWC,YAC5BC,cAAca,IAEI,KAAdd,WACFC,cAAcD,WAAac,IAE3Bf,iBAAiB,SAAWC,YAC5BC,cAAca,IAGlBX,QAAQ,QAGNY,aAAe,SAACD,GACN,MAARZ,KACFD,cAAcD,WAAac,GAEvBd,WAAWgB,QAAU,GACvBf,cAAcD,WAAWiB,MAAM,GAAI,GAAKH,GAG5CX,QAAQ,OAGNe,QAAU,WACRlB,WAAWgB,QAAU,GACvBf,cAAcD,WAAWiB,MAAM,GAAI,IAErCd,QAAQ,QAGNgB,YAAc,SAACL,GACjBb,cAAcD,WAAac,IAGzBM,eAAiB,SAAUC,GAEX,UAAdA,EAAMC,KAAiC,MAAdD,EAAMC,IACjCb,oBACuB,cAAdY,EAAMC,IACfJ,UACSd,UAAUmB,IAAIF,EAAMC,KAC7BT,YAAYQ,EAAMC,KACThB,UAAUiB,IAAIF,EAAMC,KAC7BP,aAAaM,EAAMC,KACVf,SAASgB,IAAIF,EAAMC,MAC5BH,YAAYE,EAAMC,MAGtB,OACE,mEAAKE,UAAU,MAAMC,SAAU,EAAGC,QAASN,eAA3C,UAEE,mEACEO,MAAO,CACLC,WAAY,UACZC,MAAO,QACPC,aAAc,OACdC,QAAS,OACTC,cAAe,SACfC,eAAgB,QAChBC,WAAY,WACZC,QAAS,OACTC,OAAQ,OACRC,SAAU,UAXd,UAcE,0EAAKvC,gBACL,0EAAKE,gBAEP,kEAAK2B,MAAO,CACVC,WAAY,UACZC,MAAO,QACPC,aAAc,OACdC,QAAS,OACTC,cAAe,MACfM,SAAU,OACVL,eAAgB,QAChBC,WAAY,SACZC,QAAS,QATX,SAYI3B,QAAQ+B,KAAI,SAACC,EAAaC,GACxB,OACE,qEAAQd,MAAO,CACbE,MAAO,OACPM,QAAS,MACTC,OAAQ,OAERM,QAAS,WACa,MAAhBF,EACF/B,oBACyB,OAAhB+B,EACTtB,UACSd,UAAUmB,IAAIiB,GACvB3B,YAAY2B,GACHlC,UAAUiB,IAAIiB,GACvBzB,aAAayB,GACJjC,SAASgB,IAAIiB,IACtBrB,YAAYqB,IAflB,SAkBEA,YAQD5C,2B,6BCvIf,iEAKA+C,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,MAEFC,SAASC,eAAe,U,mDCTX,K","file":"static/js/main.165ab954.chunk.js","sourcesContent":["import logo from \"./logo.svg\";\nimport \"./App.css\";\nimport { useState } from \"react\";  // useState is a hook- anything occuring at a particular time, used to create a state and change that state (React now uses functional component earlier it used class component)\n\nfunction App() {\n  let [oldExpression, setOldExpression] = useState(\"\");\n  let [expression, setExpression] = useState(\"0\");\n  let [prev, setPrev] = useState(\"\");\n\n  let numberics = new Set(\"0123456789.\");   // set has unique values\n  let operators = new Set(\"+-/*%\");\n  let brackets = new Set(\"()\");\n\n  let buttons = [\"(\", \")\", \"%\", \"AC\", \"7\", \"8\", \"9\", \"/\", \"4\", \"5\", \"6\", \"*\", \"1\", \"2\", \"3\", \"-\", \"0\", \".\", \"=\", \"+\"];\n\n  let evalateExpression = () => {\n    if (prev != \"OP\") {\n      let evaluatedValue = eval(expression);\n      setOldExpression(expression + \" = \");\n      setExpression(String(evaluatedValue));\n      setPrev(\"ANS\");\n    }\n  };\n\n  let putNumerics = (value) => {\n    if (prev == \"ANS\") {\n      setOldExpression(\"Ans = \" + expression);\n      setExpression(value);\n    } else {\n      if (expression != \"0\") {\n        setExpression(expression + value);\n      } else {\n        setOldExpression(\"Ans = \" + expression);\n        setExpression(value);\n      }\n    }\n    setPrev(\"NUM\");\n  };\n\n  let putOperators = (value) => {\n    if (prev != \"OP\") {\n      setExpression(expression + value);\n    } else {    // if we want to change the operator \n      if (expression.length >= 1) {\n        setExpression(expression.slice(0, -1) + value);\n      }\n    }\n    setPrev(\"OP\");\n  };\n\n  let putBack = () => {\n    if (expression.length >= 1) {\n      setExpression(expression.slice(0, -1));\n    }\n    setPrev(\"DEL\");\n  };\n\n  let putBrackets = (value) => {\n    setExpression(expression + value);\n  };\n\n  let onKeyUpHandler = function (event) {\n    // console.log(event.key);\n    if (event.key === \"Enter\" || event.key === \"=\") {\n      evalateExpression();\n    } else if (event.key === \"Backspace\") {\n      putBack();\n    } else if (numberics.has(event.key)) {\n      putNumerics(event.key);\n    } else if (operators.has(event.key)) { // checks if the set has the values or not\n      putOperators(event.key);\n    } else if (brackets.has(event.key)) {\n      putBrackets(event.key);\n    }\n  };\n  return (\n    <div className=\"App\" tabIndex={0} onKeyUp={onKeyUpHandler}>\n      {/* in html it's class=\"name\" */}\n      <div\n        style={{\n          background: \"#ffffff\",\n          width: \"400px\",\n          borderRadius: \"10px\",\n          display: \"flex\",\n          flexDirection: \"column\",\n          justifyContent: \"cener\",\n          alignItems: \"flex-end\",\n          padding: \"20px\",\n          margin: \"20px\",\n          overflow: \"hidden\"   //to hide the text going out of <div>\n        }}\n      >\n        <h4>{oldExpression}</h4>\n        <h1>{expression}</h1>\n      </div>\n      <div style={{\n        background: \"#ffffff\",\n        width: \"400px\",\n        borderRadius: \"10px\",\n        display: \"flex\",\n        flexDirection: \"row\",\n        flexWrap: \"wrap\",\n        justifyContent: \"cener\",\n        alignItems: \"center\",\n        padding: \"20px\"\n      }}>\n        {\n          buttons.map((buttonValue, idx) => {\n            return (\n              <button style={{\n                width: \"90px\",\n                padding: \"5px\",\n                margin: \"5px\"\n              }}\n                onClick={function () {\n                  if (buttonValue === \"=\") {\n                    evalateExpression();\n                  } else if (buttonValue === \"AC\") {\n                    putBack();\n                  } else if (numberics.has(buttonValue)) {\n                    putNumerics(buttonValue);\n                  } else if (operators.has(buttonValue)) {\n                    putOperators(buttonValue);\n                  } else if (brackets.has(buttonValue)) {\n                    putBrackets(buttonValue);\n                  }\n                }}\n              >{buttonValue}</button>\n            );\n          })\n        }\n      </div>\n    </div>\n  );\n}\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n","export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";"],"sourceRoot":""}